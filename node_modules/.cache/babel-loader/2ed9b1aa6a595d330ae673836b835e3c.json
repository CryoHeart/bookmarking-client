{"ast":null,"code":"import { AppState } from \"./app-state\";\nimport { ActionType } from \"./action-type\";\nexport function reduce() {\n  let oldAppState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new AppState();\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const newAppState = { ...oldAppState\n  };\n\n  switch (action.type) {\n    case ActionType.Login:\n      console.log(action);\n\n      if (action.payload) {\n        const username = action.payload.username;\n        const userId = action.payload.userId;\n        const token = action.payload.loginDetails.token;\n        console.log(\"Reducer Username: \" + username + \" Reducer user ID: \" + userId);\n        newAppState.username = username;\n        newAppState.userId = userId;\n        newAppState.token = token;\n      }\n\n      break;\n\n    case ActionType.GetUserBookmarks:\n      let myBookmarks = action.payload.myBookmarks;\n      newAppState.bookmarksArray = myBookmarks;\n      break;\n\n    case ActionType.AddBookmark:\n      let newBookmark = action.payload;\n      newAppState.bookmarksArray.push(newBookmark);\n      newAppState.bookmarksArray = [...newAppState.bookmarksArray];\n      break;\n\n    case ActionType.EditBookmark:\n      let editedBookmark = action.payload;\n      console.log(editedBookmark);\n\n      for (let i = 0; i <= newAppState.bookmarksArray.length; i++) {\n        if (editedBookmark.bookmarkId === newAppState.bookmarksArray[i]._id) {\n          console.log(newAppState.bookmarksArray[i]);\n          newAppState.bookmarksArray[i] = editedBookmark;\n          newAppState.bookmarksArray = [...newAppState.bookmarksArray];\n        }\n      }\n\n      break;\n\n    case ActionType.RemoveBookmark:\n      let id = action.payload;\n\n      for (let i = 0; i <= newAppState.bookmarksArray.length; i++) {\n        if (id === newAppState.bookmarksArray[i]._id) {\n          newAppState.bookmarksArray.splice(i, 1);\n          newAppState.bookmarksArray = [...newAppState.bookmarksArray];\n          console.log(\"Post deletion array: \" + newAppState.bookmarksArray);\n        }\n      }\n\n  }\n\n  return newAppState;\n}","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/redux/reducer.ts"],"names":["AppState","ActionType","reduce","oldAppState","action","newAppState","type","Login","console","log","payload","username","userId","token","loginDetails","GetUserBookmarks","myBookmarks","bookmarksArray","AddBookmark","newBookmark","push","EditBookmark","editedBookmark","i","length","bookmarkId","_id","RemoveBookmark","id","splice"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,SAASC,MAAT,GAAkF;AAAA,MAAlEC,WAAkE,uEAA1C,IAAIH,QAAJ,EAA0C;AAAA,MAA1BI,MAA0B;AAErF,QAAMC,WAAW,GAAG,EAAE,GAAGF;AAAL,GAApB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKL,UAAU,CAACM,KAAhB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,UAAIA,MAAM,CAACM,OAAX,EAAoB;AAChB,cAAMC,QAAQ,GAAGP,MAAM,CAACM,OAAP,CAAeC,QAAhC;AACA,cAAMC,MAAM,GAAGR,MAAM,CAACM,OAAP,CAAeE,MAA9B;AACA,cAAMC,KAAK,GAAGT,MAAM,CAACM,OAAP,CAAeI,YAAf,CAA4BD,KAA1C;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBE,QAAvB,GAAkC,oBAAlC,GAAyDC,MAArE;AAEAP,QAAAA,WAAW,CAACM,QAAZ,GAAuBA,QAAvB;AACAN,QAAAA,WAAW,CAACO,MAAZ,GAAqBA,MAArB;AACAP,QAAAA,WAAW,CAACQ,KAAZ,GAAoBA,KAApB;AAEH;;AACD;;AAEJ,SAAKZ,UAAU,CAACc,gBAAhB;AACI,UAAIC,WAAW,GAAGZ,MAAM,CAACM,OAAP,CAAeM,WAAjC;AACAX,MAAAA,WAAW,CAACY,cAAZ,GAA6BD,WAA7B;AACA;;AAEJ,SAAKf,UAAU,CAACiB,WAAhB;AACI,UAAIC,WAAW,GAAGf,MAAM,CAACM,OAAzB;AACAL,MAAAA,WAAW,CAACY,cAAZ,CAA2BG,IAA3B,CAAgCD,WAAhC;AACAd,MAAAA,WAAW,CAACY,cAAZ,GAA6B,CAAC,GAAGZ,WAAW,CAACY,cAAhB,CAA7B;AACA;;AAEJ,SAAKhB,UAAU,CAACoB,YAAhB;AACI,UAAIC,cAAc,GAAGlB,MAAM,CAACM,OAA5B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYa,cAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIlB,WAAW,CAACY,cAAZ,CAA2BO,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AACzD,YAAID,cAAc,CAACG,UAAf,KAA8BpB,WAAW,CAACY,cAAZ,CAA2BM,CAA3B,EAA8BG,GAAhE,EAAqE;AACjElB,UAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACY,cAAZ,CAA2BM,CAA3B,CAAZ;AACAlB,UAAAA,WAAW,CAACY,cAAZ,CAA2BM,CAA3B,IAAgCD,cAAhC;AACAjB,UAAAA,WAAW,CAACY,cAAZ,GAA6B,CAAC,GAAGZ,WAAW,CAACY,cAAhB,CAA7B;AACH;AACJ;;AACD;;AAEJ,SAAKhB,UAAU,CAAC0B,cAAhB;AACI,UAAIC,EAAE,GAAGxB,MAAM,CAACM,OAAhB;;AACA,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIlB,WAAW,CAACY,cAAZ,CAA2BO,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AACzD,YAAIK,EAAE,KAAKvB,WAAW,CAACY,cAAZ,CAA2BM,CAA3B,EAA8BG,GAAzC,EAA8C;AAC1CrB,UAAAA,WAAW,CAACY,cAAZ,CAA2BY,MAA3B,CAAkCN,CAAlC,EAAqC,CAArC;AACAlB,UAAAA,WAAW,CAACY,cAAZ,GAA6B,CAAC,GAAGZ,WAAW,CAACY,cAAhB,CAA7B;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BJ,WAAW,CAACY,cAAlD;AACH;AACJ;;AA/CT;;AAkDA,SAAOZ,WAAP;AACH","sourcesContent":["import { AppState } from \"./app-state\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./action-type\";\r\n\r\nexport function reduce(oldAppState: AppState = new AppState(), action: Action): AppState {\r\n\r\n    const newAppState = { ...oldAppState };\r\n\r\n    switch (action.type) {\r\n        case ActionType.Login:\r\n            console.log(action);\r\n            if (action.payload) {\r\n                const username = action.payload.username;\r\n                const userId = action.payload.userId;\r\n                const token = action.payload.loginDetails.token;\r\n                console.log(\"Reducer Username: \" + username + \" Reducer user ID: \" + userId);\r\n\r\n                newAppState.username = username;\r\n                newAppState.userId = userId;\r\n                newAppState.token = token;\r\n\r\n            }\r\n            break;\r\n\r\n        case ActionType.GetUserBookmarks:\r\n            let myBookmarks = action.payload.myBookmarks;\r\n            newAppState.bookmarksArray = myBookmarks;\r\n            break;\r\n\r\n        case ActionType.AddBookmark:\r\n            let newBookmark = action.payload;\r\n            newAppState.bookmarksArray.push(newBookmark);\r\n            newAppState.bookmarksArray = [...newAppState.bookmarksArray];\r\n            break;\r\n\r\n        case ActionType.EditBookmark:\r\n            let editedBookmark = action.payload;\r\n            console.log(editedBookmark);\r\n            for (let i = 0; i <= newAppState.bookmarksArray.length; i++) {\r\n                if (editedBookmark.bookmarkId === newAppState.bookmarksArray[i]._id) {\r\n                    console.log(newAppState.bookmarksArray[i]);\r\n                    newAppState.bookmarksArray[i] = editedBookmark;\r\n                    newAppState.bookmarksArray = [...newAppState.bookmarksArray];\r\n                }\r\n            }\r\n            break;\r\n\r\n        case ActionType.RemoveBookmark:\r\n            let id = action.payload;\r\n            for (let i = 0; i <= newAppState.bookmarksArray.length; i++) {\r\n                if (id === newAppState.bookmarksArray[i]._id) {\r\n                    newAppState.bookmarksArray.splice(i, 1);\r\n                    newAppState.bookmarksArray = [...newAppState.bookmarksArray];\r\n                    console.log(\"Post deletion array: \" + newAppState.bookmarksArray);\r\n                }\r\n            }\r\n    }\r\n\r\n    return newAppState;\r\n}"]},"metadata":{},"sourceType":"module"}