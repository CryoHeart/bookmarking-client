{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\React\\\\bookmarking-app\\\\bookmarking-client\\\\src\\\\components\\\\addBookmarkModal\\\\AddBookmarkModal.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionType } from \"../../redux/action-type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet AddBookmarkModal = () => {\n  _s();\n\n  // let history = useHistory();\n  let dispatch = useDispatch();\n  let [name, setName] = useState(\"\");\n  let [url, setUrl] = useState(\"\");\n  let [category, setCategory] = useState(\"\"); // let [image, setImage] = useState(\"\");\n\n  let newBookmark = {\n    name: name,\n    url: url,\n    category: category\n  };\n\n  let onNameTyped = event => {\n    setName(event.target.value);\n  };\n\n  let onUrlTyped = event => {\n    setUrl(event.target.value);\n  };\n\n  let onCategoryTyped = event => {\n    setCategory(event.target.value);\n  };\n\n  async function onAddBookmarkClicked() {\n    try {\n      let response = await axios.post(\"http://localhost:5000/bookmarks/addBookmark/\", newBookmark);\n      console.log(newBookmark);\n      const responseArray = [];\n      result.data.forEach(item => {\n        results.push({\n          id: item.id,\n          ref: item.ref,\n          environment: item.environment.name,\n          status: item.status,\n          tag: item.deployable.tag\n        });\n      });\n      dispatch({\n        type: ActionType.AddBookmark,\n        payload: responseArray\n      });\n    } catch (e) {\n      alert(\"ServerError: Bookmark URL already exists!\");\n      console.error(e);\n      return;\n    }\n\n    alert(\"Bookmark successfully added!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddVacationModal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Add new Bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: onNameTyped\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this), \"URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: onUrlTyped\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }, this), \"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: category,\n          onChange: onCategoryTyped\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"EditVacationButton\",\n      size: \"sm\",\n      onClick: onAddBookmarkClicked,\n      children: \"Add bookmark! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBookmarkModal, \"gHT/RQMOtt7klVVnHBgDY5WaF2c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddBookmarkModal;\nexport default AddBookmarkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBookmarkModal\");","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/components/addBookmarkModal/AddBookmarkModal.tsx"],"names":["axios","useState","Button","useDispatch","ActionType","AddBookmarkModal","dispatch","name","setName","url","setUrl","category","setCategory","newBookmark","onNameTyped","event","target","value","onUrlTyped","onCategoryTyped","onAddBookmarkClicked","response","post","console","log","responseArray","result","data","forEach","item","results","push","id","ref","environment","status","tag","deployable","type","AddBookmark","payload","e","alert","error"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IBookmark } from \"../../models/models\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\nlet AddBookmarkModal = (): JSX.Element => {\r\n\r\n    // let history = useHistory();\r\n    let dispatch = useDispatch();\r\n\r\n    let [name, setName] = useState(\"\");\r\n    let [url, setUrl] = useState(\"\");\r\n    let [category, setCategory] = useState(\"\");\r\n\r\n    // let [image, setImage] = useState(\"\");\r\n\r\n    let newBookmark = {\r\n        name: name,\r\n        url: url,\r\n        category: category\r\n    }\r\n\r\n    let onNameTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value)\r\n    }\r\n    let onUrlTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(event.target.value);\r\n    }\r\n    let onCategoryTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setCategory(event.target.value);\r\n    }\r\n\r\n    async function onAddBookmarkClicked() {\r\n        try {\r\n            let response = await axios.post<AxiosResponse<IBookmark>>(\"http://localhost:5000/bookmarks/addBookmark/\", newBookmark);\r\n            console.log(newBookmark)\r\n            const responseArray = [];\r\n            result.data.forEach(item => {\r\n                results.push({\r\n                   id: item.id,\r\n                   ref: item.ref,\r\n                   environment: item.environment.name,\r\n                   status: item.status,\r\n                   tag: item.deployable.tag\r\n                });\r\n              });\r\n            \r\n            \r\n            \r\n            dispatch({ type: ActionType.AddBookmark, payload: responseArray });\r\n\r\n        }\r\n        catch (e) {\r\n            alert(\"ServerError: Bookmark URL already exists!\");\r\n            console.error(e);\r\n            return;\r\n        }\r\n        alert(\"Bookmark successfully added!\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"AddVacationModal\">\r\n\r\n            <h5>Add new Bookmark</h5>\r\n            <div className=\"formDiv\">\r\n                <form>\r\n                    Name: <input type=\"text\" value={name} onChange={onNameTyped} />\r\n                    URL: <input type=\"text\" value={url} onChange={onUrlTyped} />\r\n                    Category:<input type=\"text\" value={category} onChange={onCategoryTyped} />\r\n                </form>\r\n            </div>\r\n            <Button variant=\"primary\" className=\"EditVacationButton\" size=\"sm\" onClick={onAddBookmarkClicked} >Add bookmark! </Button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddBookmarkModal;"]},"metadata":{},"sourceType":"module"}