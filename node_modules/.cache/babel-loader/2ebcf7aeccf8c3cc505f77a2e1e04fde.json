{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\React\\\\bookmarking-app\\\\bookmarking-client\\\\src\\\\components\\\\addBookmarkModal\\\\AddBookmarkModal.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionType } from \"../../redux/action-type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet AddBookmarkModal = () => {\n  _s();\n\n  // let history = useHistory();\n  let dispatch = useDispatch();\n  let [name, setName] = useState(\"\");\n  let [url, setUrl] = useState(\"\");\n  let [category, setCategory] = useState(\"\"); // let [image, setImage] = useState(\"\");\n\n  let newBookmark = {\n    name: name,\n    url: url,\n    category: category\n  };\n\n  let onNameTyped = event => {\n    setName(event.target.value);\n  };\n\n  let onUrlTyped = event => {\n    setUrl(event.target.value);\n  };\n\n  let onCategoryTyped = event => {\n    setCategory(event.target.value);\n  };\n\n  function onAddBookmarkClicked() {\n    try {\n      let response = axios.post(\"http://localhost:5000/bookmarks/addBookmark/\", newBookmark);\n      console.log(response);\n      dispatch({\n        type: ActionType.AddBookmark,\n        payload: newBookmark\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    alert(\"Bookmark successfully added!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddVacationModal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddBookmarkModal, \"gHT/RQMOtt7klVVnHBgDY5WaF2c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddBookmarkModal;\nexport default AddBookmarkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBookmarkModal\");","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/components/addBookmarkModal/AddBookmarkModal.tsx"],"names":["axios","useState","useDispatch","ActionType","AddBookmarkModal","dispatch","name","setName","url","setUrl","category","setCategory","newBookmark","onNameTyped","event","target","value","onUrlTyped","onCategoryTyped","onAddBookmarkClicked","response","post","console","log","type","AddBookmark","payload","e","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;;;AAEA,IAAIC,gBAAgB,GAAG,MAAmB;AAAA;;AAEtC;AACA,MAAIC,QAAQ,GAAGH,WAAW,EAA1B;AAEI,MAAI,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAI,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAtC,CAPkC,CASlC;;AAEA,MAAIW,WAAW,GAAG;AACdN,IAAAA,IAAI,EAAEA,IADQ;AAEdE,IAAAA,GAAG,EAAEA,GAFS;AAGdE,IAAAA,QAAQ,EAAEA;AAHI,GAAlB;;AAMA,MAAIG,WAAW,GAAIC,KAAD,IAA0C;AACxDP,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,MAAIC,UAAU,GAAIH,KAAD,IAA0C;AACvDL,IAAAA,MAAM,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD;;AAGA,MAAIE,eAAe,GAAIJ,KAAD,IAA0C;AAC5DH,IAAAA,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAIA,WAASG,oBAAT,GAAgC;AAC5B,QAAI;AACA,UAAIC,QAAQ,GAAGpB,KAAK,CAACqB,IAAN,CAAqC,8CAArC,EAAqFT,WAArF,CAAf;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAf,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAErB,UAAU,CAACsB,WAAnB;AAAgCC,QAAAA,OAAO,EAAEd;AAAzC,OAAD,CAAR;AAEH,KALD,CAMA,OAAOe,CAAP,EAAU;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH;;AACDC,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3DL;;GAAIxB,gB;UAGeF,W;;;KAHfE,gB;AA6DA,eAAeA,gBAAf","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IBookmark } from \"../../models/models\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\nlet AddBookmarkModal = (): JSX.Element => {\r\n\r\n    // let history = useHistory();\r\n    let dispatch = useDispatch();\r\n    \r\n        let [name, setName] = useState(\"\");\r\n        let [url, setUrl] = useState(\"\");\r\n        let [category, setCategory] = useState(\"\");\r\n\r\n        // let [image, setImage] = useState(\"\");\r\n    \r\n        let newBookmark = {\r\n            name: name,\r\n            url: url,\r\n            category: category\r\n        }\r\n    \r\n        let onNameTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n            setName(event.target.value)\r\n        }\r\n        let onUrlTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n            setUrl(event.target.value);\r\n        }\r\n        let onCategoryTyped = (event: ChangeEvent<HTMLInputElement>) => {\r\n            setCategory(event.target.value);\r\n        }\r\n    \r\n        function onAddBookmarkClicked() {\r\n            try {\r\n                let response = axios.post<AxiosResponse<IBookmark>>(\"http://localhost:5000/bookmarks/addBookmark/\", newBookmark);\r\n                console.log(response);\r\n                dispatch({ type: ActionType.AddBookmark, payload: newBookmark });\r\n    \r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n            }\r\n            alert(\"Bookmark successfully added!\");\r\n        }\r\n    \r\n    \r\n        return (\r\n            <div className=\"AddVacationModal\">\r\n                {/* <br />\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Bookmark name:</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"form\" onChange={onNameTyped} /> <br />\r\n                    <Form.Label>URL:</Form.Label>\r\n                    <br />\r\n                    <Form.Control type=\"text\" className=\"form\" onChange={onUrlTyped} /> <br />\r\n                    <Form.Label>Category:</Form.Label>\r\n                    <Form.Control type=\"text\" className=\"form\" onChange={onCategoryTyped} /><br />\r\n    \r\n                 \r\n                    <Button variant=\"primary\" className=\"AddVacationButton\" size=\"lg\" onClick={onAddBookmarkClicked} >Add new Bookmark</Button>\r\n                </Form.Group> */}\r\n            </div>\r\n        )\r\n    \r\n    }\r\n    \r\n    export default AddBookmarkModal;"]},"metadata":{},"sourceType":"module"}