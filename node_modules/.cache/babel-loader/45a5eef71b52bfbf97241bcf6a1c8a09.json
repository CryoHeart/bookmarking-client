{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\React\\\\bookmarking-app\\\\bookmarking-client\\\\src\\\\components\\\\editModal\\\\EditModal.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionType } from \"../../redux/action-type\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet EditModal = bookmark => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(bookmark.name);\n  const [url, setUrl] = useState(bookmark.url);\n  const [category, setCategory] = useState(bookmark.url);\n  let editedBookmark = {\n    name: name,\n    url: url,\n    category: category\n  };\n\n  const onNameChanged = event => {\n    setName(event.target.value);\n  };\n\n  const onUrlChanged = event => {\n    setUrl(event.target.value);\n  };\n\n  const onCategoryChanged = event => {\n    setCategory(event.target.value);\n  };\n\n  async function onEditSubmit() {\n    try {\n      let response = await axios.put(\"http://localhost:5000/bookmarks/editBookmark\", editedBookmark);\n      console.log(response);\n      dispatch({\n        type: ActionType.EditBookmark,\n        payload: editedVacation\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    alert(\"Bookmark updated successfully\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editModal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Edit Bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), \"ID: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: onIdChanged,\n      value: vacationId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), \"Destination: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: destination,\n      onChange: onDestinationChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }, this), \"Price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: onPriceChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this), \"Start date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDate,\n      onChange: onStartDateChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), \"End date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: endDate,\n      onChange: onEndDateChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: saveFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: uploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"EditVacationButton\",\n      size: \"sm\",\n      onClick: onEditSubmit,\n      children: \"Submit Changes \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => {\n        if (window.confirm('Are you sure you wish to delete vacation ' + destination + '?')) deleteVacation(vacationId);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditModal, \"n6QJ5Y76zmkW81t9np0AChMnRVw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/components/editModal/EditModal.tsx"],"names":["axios","useState","useDispatch","ActionType","EditModal","bookmark","dispatch","name","setName","url","setUrl","category","setCategory","editedBookmark","onNameChanged","event","target","value","onUrlChanged","onCategoryChanged","onEditSubmit","response","put","console","log","type","EditBookmark","payload","editedVacation","error","alert","onIdChanged","vacationId","destination","onDestinationChanged","price","onPriceChanged","startDate","onStartDateChanged","endDate","onEndDateChanged","saveFile","uploadFile","window","confirm","deleteVacation"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IBookmark } from \"../../models/models\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\n\r\nlet EditModal = (bookmark: IBookmark): JSX.Element => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState(bookmark.name);\r\n    const [url, setUrl] = useState(bookmark.url);\r\n    const [category, setCategory] = useState(bookmark.url);\r\n\r\n    let editedBookmark: IBookmark = {\r\n        name: name,\r\n        url: url,\r\n        category: category\r\n    }\r\n\r\n    const onNameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const onUrlChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUrl(event.target.value);\r\n    }\r\n    const onCategoryChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setCategory(event.target.value);\r\n    }\r\n\r\n    async function onEditSubmit() {\r\n        try {\r\n            let response = await axios.put(\"http://localhost:5000/bookmarks/editBookmark\", editedBookmark);\r\n            console.log(response);\r\n            dispatch({ type: ActionType.EditBookmark, payload: editedVacation });\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        alert(\"Bookmark updated successfully\");\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"editModal\">\r\n\r\n            <h5>Edit Bookmark</h5>\r\n            ID: <input type=\"number\" onChange={onIdChanged} value={vacationId} />\r\n            Destination: <input type=\"text\" value={destination} onChange={onDestinationChanged} />\r\n            Price: <input type=\"number\" value={price} onChange={onPriceChanged} />\r\n            Start date:<input type=\"date\" value={startDate} onChange={onStartDateChanged} />\r\n            End date:<input type=\"date\" value={endDate} onChange={onEndDateChanged} />\r\n            <input type=\"file\" onChange={saveFile} />\r\n            <input type=\"submit\" onClick={uploadFile} />\r\n            <Button variant=\"primary\" className=\"EditVacationButton\" size=\"sm\" onClick={onEditSubmit} >Submit Changes </Button>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={() => { if (window.confirm('Are you sure you wish to delete vacation ' + destination + '?')) deleteVacation(vacationId) }}>Delete</Button>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default EditModal;"]},"metadata":{},"sourceType":"module"}