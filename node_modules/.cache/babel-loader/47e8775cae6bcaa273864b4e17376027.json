{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\React\\\\bookmarking-app\\\\bookmarking-client\\\\src\\\\components\\\\Main\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { StrictMode, useEffect, useState } from 'react';\nimport './Main.css';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ActionType } from '../../redux/action-type';\nimport Modal from \"react-modal\";\nimport Button from 'react-bootstrap/Button';\nimport BookmarkCard from '../bookmarkCard/bookmarkCard';\nimport AddBookmarkModal from '../addBookmarkModal/AddBookmarkModal';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  const bookmarksArray = useSelector(state => state.bookmarksArray);\n  const bookmarkAmount = bookmarksArray.length;\n  let dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const GetUserBookmarks = () => {\n    axios.get(\"http://localhost:5000/bookmarks/\").then(response => {\n      let myBookmarks = response.data;\n      console.log(myBookmarks);\n      dispatch({\n        type: ActionType.GetAllBookmarks,\n        payload: {\n          myBookmarks\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    GetUserBookmarks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newBookmarkButtonDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          size: \"lg\",\n          onClick: toggleModal,\n          children: \"Add new bookmark!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isOpen,\n          onRequestClose: toggleModal,\n          contentLabel: \"My dialog\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AddBookmarkModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookmarksDiv\",\n        children: bookmarksArray.map((bookmark, index) => /*#__PURE__*/_jsxDEV(BookmarkCard, {\n          _id: bookmark._id,\n          name: bookmark.name,\n          url: bookmark.url,\n          category: bookmark.category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"LmHoqLJVWe01Q2ovzjvgC5fdMPg=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/components/Main/Main.tsx"],"names":["React","StrictMode","useEffect","useState","axios","useDispatch","useSelector","ActionType","Modal","Button","BookmarkCard","AddBookmarkModal","useNavigate","Main","show","setShow","handleClose","handleShow","isOpen","setIsOpen","toggleModal","bookmarksArray","state","bookmarkAmount","length","dispatch","navigate","GetUserBookmarks","get","then","response","myBookmarks","data","console","log","type","GetAllBookmarks","payload","map","bookmark","index","_id","name","url","category"],"mappings":"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","sourcesContent":["import React, { StrictMode, useEffect, useState } from 'react'\r\nimport './Main.css'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../redux/app-state';\r\nimport { ActionType } from '../../redux/action-type';\r\nimport Modal from \"react-modal\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport BookmarkCard from '../bookmarkCard/bookmarkCard';\r\nimport AddBookmarkModal from '../addBookmarkModal/AddBookmarkModal';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Main() {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    \r\n\r\n    function toggleModal() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const bookmarksArray = useSelector((state: AppState) => state.bookmarksArray);\r\n    const bookmarkAmount = bookmarksArray.length;\r\n\r\n    let dispatch = useDispatch();\r\n    let navigate = useNavigate();\r\n\r\n    const GetUserBookmarks = () => {\r\n        axios.get(\"http://localhost:5000/bookmarks/\")\r\n            .then((response) => {\r\n                let myBookmarks = response.data;\r\n                console.log(myBookmarks);\r\n                dispatch({ type: ActionType.GetAllBookmarks, payload: { myBookmarks } })\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetUserBookmarks();\r\n    }\r\n        , [])\r\n\r\n    return (\r\n\r\n        <StrictMode>\r\n            <div className=\"main\">\r\n\r\n                <div className=\"newBookmarkButtonDiv\">\r\n                    <Button variant=\"success\" size=\"lg\" onClick={toggleModal}>\r\n                        Add new bookmark!\r\n                    </Button>\r\n\r\n                    <Modal\r\n                        isOpen={isOpen}\r\n                        onRequestClose={toggleModal}\r\n                        contentLabel=\"My dialog\"\r\n                    >\r\n                        <div><AddBookmarkModal /></div>\r\n                        <button onClick={toggleModal}>Close</button>\r\n                    </Modal>\r\n                </div>\r\n                <div className=\"bookmarksDiv\">\r\n                    {bookmarksArray.map((bookmark, index) => (\r\n\r\n                        <BookmarkCard key={index} _id={bookmark._id} name={bookmark.name} url={bookmark.url} category={bookmark.category} />\r\n\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </StrictMode>\r\n    )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}