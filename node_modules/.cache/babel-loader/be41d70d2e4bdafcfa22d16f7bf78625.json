{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\React\\\\bookmarking-app\\\\bookmarking-client\\\\src\\\\components\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActionType } from \"../../redux/action-type\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  let loggedUser = {\n    username: username,\n    password: password\n  };\n\n  const onUsernameChanged = event => {\n    setUsername(event.target.value);\n  };\n\n  const onPasswordChanged = event => {\n    setPassword(event.target.value);\n  };\n\n  async function onLoginClicked() {\n    if (!loggedUser.username) {\n      alert(\"Please enter your username.\");\n    }\n\n    if (!loggedUser.password) {\n      alert(\"Please enter your password.\");\n    }\n\n    try {\n      let response = await axios.post(\"http://localhost:5000/users/login\", loggedUser);\n      let loginDetails = response.data;\n      dispatch({\n        type: ActionType.Login,\n        payload: loginDetails\n      });\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + loginDetails.token;\n      console.log(\"UserId: \" + loginDetails.userId + \". Username: \" + loginDetails.username + \". token: \" + loginDetails.token);\n      sessionStorage.setItem(\"token\", loginDetails.token);\n      sessionStorage.setItem(\"Username\", loginDetails.username);\n      sessionStorage.setItem(\"userId\", loginDetails.userId);\n      navigate(\"/\");\n    } catch (e) {\n      alert(e);\n      console.log(e);\n    }\n  }\n\n  function onNewUserClicked() {\n    navigate(\"/register\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"login\">\n    //     <h3>Log in existing user</h3>\n    //     <br />\n    //     <p>Username: </p><Form.Control type=\"text\" placeholder=\"Username\" className=\"form\" onChange={onUsernameChanged}/> <br />\n    //     <p>Password: </p><Form.Control type=\"password\" placeholder=\"password\" onChange={onPasswordChanged} /> <br /><br />\n    //     <Button variant=\"primary\" className=\"loginScreenButtons\" size=\"lg\" onClick={onLoginClicked}>Login</Button>\n    //     <br />\n    //     <Button variant=\"primary\" className=\"loginScreenButtons\" size=\"sm\" onClick={onNewUserClicked}>New User?</Button>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"loginDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email / Username\",\n              onChange: onUsernameChanged,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: onPasswordChanged,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: onLoginClicked,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 86\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: onNewUserClicked,\n          children: \"New user?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Login, \"06oGW9bxuaKt7NaizLmrAthAuRU=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Development/React/bookmarking-app/bookmarking-client/src/components/Login/Login.tsx"],"names":["React","useState","axios","useNavigate","ActionType","useDispatch","Login","username","setUsername","password","setPassword","dispatch","navigate","loggedUser","onUsernameChanged","event","target","value","onPasswordChanged","onLoginClicked","alert","response","post","loginDetails","data","type","payload","defaults","headers","common","token","console","log","userId","sessionStorage","setItem","e","onNewUserClicked"],"mappings":";;;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAKA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMU,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;AAGA,MAAIU,UAAkB,GAAG;AACrBN,IAAAA,QAAQ,EAAEA,QADW;AAErBE,IAAAA,QAAQ,EAAEA;AAFW,GAAzB;;AAKA,QAAMK,iBAAiB,GAAIC,KAAD,IAA0C;AAChEP,IAAAA,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,KAAD,IAA0C;AAChEL,IAAAA,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAIA,iBAAeE,cAAf,GAAgC;AAE5B,QAAI,CAACN,UAAU,CAACN,QAAhB,EAA0B;AACtBa,MAAAA,KAAK,CAAC,6BAAD,CAAL;AAGH;;AACD,QAAI,CAACP,UAAU,CAACJ,QAAhB,EAA0B;AACtBW,MAAAA,KAAK,CAAC,6BAAD,CAAL;AAEH;;AAED,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAkB,mCAAlB,EAAuDT,UAAvD,CAArB;AACA,UAAIU,YAAiB,GAAGF,QAAQ,CAACG,IAAjC;AACAb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAErB,UAAU,CAACE,KAAnB;AAA0BoB,QAAAA,OAAO,EAAEH;AAAnC,OAAD,CAAR;AACArB,MAAAA,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYN,YAAY,CAACO,KAA1E;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaT,YAAY,CAACU,MAA1B,GAAmC,cAAnC,GAAoDV,YAAY,CAAChB,QAAjE,GAA4E,WAA5E,GAA0FgB,YAAY,CAACO,KAAnH;AACAI,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCZ,YAAY,CAACO,KAA7C;AACAI,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCZ,YAAY,CAAChB,QAAhD;AACA2B,MAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiCZ,YAAY,CAACU,MAA9C;AACArB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KAVD,CAWA,OAAOwB,CAAP,EAAU;AACNhB,MAAAA,KAAK,CAACgB,CAAD,CAAL;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH;AACJ;;AAED,WAASC,gBAAT,GAA4B;AACxBzB,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH;;AAED;AAAA;AAEI;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC,kBAA/B;AAAkD,cAAA,QAAQ,EAAEE,iBAA5D;AAA+E,cAAA,QAAQ;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,WAAW,EAAC,UAAnC;AAA8C,cAAA,QAAQ,EAAEI,iBAAxD;AAA2E,cAAA,QAAQ;AAAnF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACQ;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAEC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,oBACyE;AAAA;AAAA;AAAA;AAAA,gBADzE,oBACgF;AAAA;AAAA;AAAA;AAAA,gBADhF,eAEQ;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAEkB,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAiCH;;GAtFQ/B,K;UAGYD,W,EACAF,W;;;KAJZG,K;AA0FT,eAAeA,KAAf","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ILogin, IUser } from \"../../models/models\";\r\nimport { ActionType } from \"../../redux/action-type\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    let loggedUser: ILogin = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    const onUsernameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const onPasswordChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    async function onLoginClicked() {\r\n\r\n        if (!loggedUser.username) {\r\n            alert(\"Please enter your username.\");\r\n            \r\n\r\n        }\r\n        if (!loggedUser.password) {\r\n            alert(\"Please enter your password.\");\r\n\r\n        }\r\n\r\n        try {\r\n            let response = await axios.post<IUser>(\"http://localhost:5000/users/login\", loggedUser);\r\n            let loginDetails: any = response.data;\r\n            dispatch({ type: ActionType.Login, payload: loginDetails });\r\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + loginDetails.token;\r\n            console.log(\"UserId: \" + loginDetails.userId + \". Username: \" + loginDetails.username + \". token: \" + loginDetails.token);\r\n            sessionStorage.setItem(\"token\", loginDetails.token);\r\n            sessionStorage.setItem(\"Username\", loginDetails.username);\r\n            sessionStorage.setItem(\"userId\", loginDetails.userId);\r\n            navigate(\"/\");\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    function onNewUserClicked() {\r\n        navigate(\"/register\");\r\n    }\r\n\r\n    return (\r\n\r\n        // <div className=\"login\">\r\n\r\n\r\n        //     <h3>Log in existing user</h3>\r\n        //     <br />\r\n        //     <p>Username: </p><Form.Control type=\"text\" placeholder=\"Username\" className=\"form\" onChange={onUsernameChanged}/> <br />\r\n        //     <p>Password: </p><Form.Control type=\"password\" placeholder=\"password\" onChange={onPasswordChanged} /> <br /><br />\r\n        //     <Button variant=\"primary\" className=\"loginScreenButtons\" size=\"lg\" onClick={onLoginClicked}>Login</Button>\r\n        //     <br />\r\n\r\n        //     <Button variant=\"primary\" className=\"loginScreenButtons\" size=\"sm\" onClick={onNewUserClicked}>New User?</Button>\r\n\r\n        // </div>\r\n        <div className=\"loginDiv\">\r\n            <h1>Welcome back!</h1>\r\n            <div className=\"formDiv\">\r\n                <form>\r\n                    <div className=\"form-field\">\r\n                        <input type=\"text\" placeholder=\"Email / Username\" onChange={onUsernameChanged} required />\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <input type=\"password\" placeholder=\"Password\" onChange={onPasswordChanged} required />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"buttonsDiv\">\r\n                    <button className=\"btn\" onClick={onLoginClicked}>Log in</button> <br /> <br />\r\n                    <button className=\"btn\" onClick={onNewUserClicked}>New user?</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}